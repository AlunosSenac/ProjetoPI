buildscript {
    repositories {
        google()  // Repositório do Google para plugins Gradle
        mavenCentral()  // Repositório Maven Central
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'  // Plugin Android Gradle
        classpath 'com.google.gms:google-services:4.3.10'  // Plugin Google Services
    }
}

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // Aplicando o plugin do Google Services
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdkVersion 34
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.flutter__app"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Configuração de assinatura para release (certifique-se de ter suas chaves configuradas)
            signingConfig signingConfigs.debug 
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..'  // Caminho para o diretório do projeto Flutter
}

dependencies {
    // Aqui você pode adicionar as dependências necessárias para seu projeto Flutter
}
